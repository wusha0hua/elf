; ModuleID = 'test.c'
source_filename = "test.c"
target datalayout = "e-m:e-p:32:32-p270:32:32-p271:32:32-p272:64:64-f64:32:64-f80:32-n8:16:32-S128"
target triple = "i386-pc-linux-gnu"

@.str = private unnamed_addr constant [23 x i8] c"please input username:\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"please input password:\00", align 1
@__const.Login.admin_username = private unnamed_addr constant [6 x i8] c"admin\00", align 1
@__const.Login.admin_password = private unnamed_addr constant [9 x i8] c"12345678\00", align 1
@.str.3 = private unnamed_addr constant [20 x i8] c"username: %s error\0A\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"password: %s error\0A\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"OK\0A\00", align 1

; Function Attrs: noinline nounwind optnone sspstrong
define dso_local void @GetInput(i8* %0, i8* %1) #0 {
  %3 = alloca i8*, align 4
  %4 = alloca i8*, align 4
  store i8* %0, i8** %3, align 4
  store i8* %1, i8** %4, align 4
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i32 0, i32 0))
  %6 = load i8*, i8** %3, align 4
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i8* %6)
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i32 0, i32 0))
  %9 = load i8*, i8** %4, align 4
  %10 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i8* %9)
  ret void
}

declare i32 @printf(i8*, ...) #1

declare i32 @__isoc99_scanf(i8*, ...) #1

; Function Attrs: noinline nounwind optnone sspstrong
define dso_local i32 @Login(i8* %0, i8* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca [6 x i8], align 1
  %7 = alloca [9 x i8], align 1
  store i8* %0, i8** %4, align 4
  store i8* %1, i8** %5, align 4
  %8 = bitcast [6 x i8]* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %8, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @__const.Login.admin_username, i32 0, i32 0), i32 6, i1 false)
  %9 = bitcast [9 x i8]* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %9, i8* align 1 getelementptr inbounds ([9 x i8], [9 x i8]* @__const.Login.admin_password, i32 0, i32 0), i32 9, i1 false)
  %10 = load i8*, i8** %4, align 4
  %11 = getelementptr inbounds [6 x i8], [6 x i8]* %6, i32 0, i32 0
  %12 = call i32 @strcmp(i8* %10, i8* %11) #4
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %21, label %14

14:                                               ; preds = %2
  %15 = load i8*, i8** %5, align 4
  %16 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i32 0, i32 0
  %17 = call i32 @strcmp(i8* %15, i8* %16) #4
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %14
  store i32 3, i32* %3, align 4
  br label %22

20:                                               ; preds = %14
  store i32 2, i32* %3, align 4
  br label %22

21:                                               ; preds = %2
  store i32 1, i32* %3, align 4
  br label %22

22:                                               ; preds = %21, %20, %19
  %23 = load i32, i32* %3, align 4
  ret i32 %23
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i32, i1 immarg) #2

; Function Attrs: nounwind readonly willreturn
declare i32 @strcmp(i8*, i8*) #3

; Function Attrs: noinline nounwind optnone sspstrong
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca [10 x i8], align 1
  %3 = alloca [10 x i8], align 1
  store i32 0, i32* %1, align 4
  %4 = getelementptr inbounds [10 x i8], [10 x i8]* %2, i32 0, i32 0
  %5 = getelementptr inbounds [10 x i8], [10 x i8]* %3, i32 0, i32 0
  call void @GetInput(i8* %4, i8* %5)
  %6 = getelementptr inbounds [10 x i8], [10 x i8]* %2, i32 0, i32 0
  %7 = getelementptr inbounds [10 x i8], [10 x i8]* %3, i32 0, i32 0
  %8 = call i32 @Login(i8* %6, i8* %7)
  switch i32 %8, label %17 [
    i32 1, label %9
    i32 2, label %12
    i32 3, label %15
  ]

9:                                                ; preds = %0
  %10 = getelementptr inbounds [10 x i8], [10 x i8]* %2, i32 0, i32 0
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i32 0, i32 0), i8* %10)
  br label %17

12:                                               ; preds = %0
  %13 = getelementptr inbounds [10 x i8], [10 x i8]* %3, i32 0, i32 0
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i32 0, i32 0), i8* %13)
  br label %17

15:                                               ; preds = %0
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i32 0, i32 0))
  br label %17

17:                                               ; preds = %15, %0, %12, %9
  %18 = load i32, i32* %1, align 4
  ret i32 %18
}

attributes #0 = { noinline nounwind optnone sspstrong "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="pentium4" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="pentium4" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { argmemonly nofree nounwind willreturn }
attributes #3 = { nounwind readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="pentium4" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nounwind readonly willreturn }

!llvm.module.flags = !{!0, !1, !2, !3, !4}
!llvm.ident = !{!5}

!0 = !{i32 1, !"NumRegisterParameters", i32 0}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 7, !"PIC Level", i32 2}
!3 = !{i32 7, !"PIE Level", i32 2}
!4 = !{i32 7, !"frame-pointer", i32 2}
!5 = !{!"clang version 13.0.1"}
